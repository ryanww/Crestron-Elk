#SYMBOL_NAME "Elk Area Driver"
#PRINT_TO_TRACE
#USER_SIMPLSHARP_LIBRARY "ElkAlarm"

Digital_Input _skip_, Disarm, Armed_Away, Armed_Stay, Arm_Stay_Instant, Arm_Night, Arm_Night_Instant, Arm_Vacation, Arm_To_Next_Away_Mode, Arm_To_Next_Stay_Mode, ForceArm_To_Away_Mode, ForceArm_To_Stay_Mode;
Digital_Input _skip_, KP_0, KP_1, KP_2, KP_3, KP_4, KP_5, KP_6, KP_7, KP_8, KP_9, KP_Backspace, KP_Clear;

String_Output _skip_, Area_Name, Armed_Status_Text, Arm_Up_State_Text, Alarm_Status_Text, Countdown_Clock_Text, Password_Text;

Digital_Output _skip_, Show_Clock_fb;
Digital_Output _skip_, Armed_State_Disarmed_fb, Armed_State_Armed_Away_fb, Armed_State_Stay_fb, Armed_State_Stay_Instant_fb, Armed_State_Armed_To_Night_fb, Armed_State_Armed_To_Night_Instant_fb, Armed_State_Vacation_fb;
Digital_Output _skip_, Arm_Up_State_Not_Ready_fb, Arm_Up_State_Ready_To_Arm_fb, Arm_Up_State_Ready_To_Arm_With_Force_fb, Arm_Up_State_Armed_With_Exit_Timer_fb, Arm_Up_State_Armed_fb, Arm_Up_State_Force_Armed_With_Violation_fb;
Digital_Output Arm_Up_State_Armed_With_Bypass_fb;
Digital_Output _skip_, Alarm_State_No_Alarm_Active_fb, Alarm_State_Entrance_Delay_Active_fb, Alarm_State_Alarm_Abort_Delay_Active_fb, Alarm_State_Fire_Alarm_fb, Alarm_State_Medical_Alarm_fb, Alarm_State_Police_Alarm_fb;
Digital_Output Alarm_State_Burglar_Alarm_fb, Alarm_State_Aux_1_Alarm_fb, Alarm_State_Aux_2_Alarm_fb, Alarm_State_Aux_3_Alarm_fb, Alarm_State_Aux_4_Alarm_fb, Alarm_State_Carbon_Monoxide_Alarm_fb, Alarm_State_Emergency_Alarm_fb;
Digital_Output Alarm_State_Freeze_Alarm_fb, Alarm_State_Gas_Alarm_fb, Alarm_State_Heat_Alarm_fb, Alarm_State_Water_Alarm_fb, Alarm_State_Fire_Supervisory_fb, Alarm_State_Verify_Fire_fb;

Digital_Output _skip_, Zone_Assigned_fb[208, 208];

ElkAreaSimpl myArea;

integer_parameter PanelNumber, AreaNumber;

Push Disarm
{
    myArea.SetArmState(0);
}
Push Armed_Away
{
    myArea.SetArmState(1);
}
Push Armed_Stay
{
    myArea.SetArmState(2);
}
Push Arm_Stay_Instant
{
    myArea.SetArmState(3);
}
Push Arm_Night
{
    myArea.SetArmState(4);
}
Push Arm_Night_Instant
{
    myArea.SetArmState(5);
}
Push Arm_Vacation
{
    myArea.SetArmState(6);
}
Push Arm_To_Next_Away_Mode
{
    myArea.SetArmState(7);
}
Push Arm_To_Next_Stay_Mode
{
    myArea.SetArmState(8);
}
Push ForceArm_To_Away_Mode
{
    myArea.SetArmState(9);
}
Push ForceArm_To_Stay_Mode
{
    myArea.SetArmState(10);
}

Push KP_0
{
    myArea.KeypadNumber(0);   
}
Push KP_1
{
    myArea.KeypadNumber(1);   
}
Push KP_2
{
    myArea.KeypadNumber(2);   
}
Push KP_3
{
    myArea.KeypadNumber(3);   
}
Push KP_4
{
    myArea.KeypadNumber(4);   
}
Push KP_5
{
    myArea.KeypadNumber(5);   
}
Push KP_6
{
    myArea.KeypadNumber(6);   
}
Push KP_7
{
    myArea.KeypadNumber(7);   
}
Push KP_8
{
    myArea.KeypadNumber(8);   
}
Push KP_9
{
    myArea.KeypadNumber(9);   
}
Push KP_Backspace
{
    myArea.KeypadBackspace();
}
Push KP_Clear
{
    myArea.KeypadClear();
}

Callback Function onArmedStatusChange(integer _as)
{
    string armedStatusText[254];
    
    Armed_State_Disarmed_fb = _as = 0;
    Armed_State_Armed_Away_fb = _as = 1;
    Armed_State_Stay_fb = _as = 2;
    Armed_State_Stay_Instant_fb = _as = 3;
    Armed_State_Armed_To_Night_fb = _as = 4;
    Armed_State_Armed_To_Night_Instant_fb = _as = 5;
    Armed_State_Vacation_fb = _as = 6;
    armedStatusText = myArea.GetAreaArmedStatusString(); 
    Armed_Status_Text = armedStatusText;
}
Callback Function onArmUpStateChange(integer _au)
{
    string armUpStateText[255];

    Arm_Up_State_Not_Ready_fb = _au = 0;
    Arm_Up_State_Ready_To_Arm_fb = _au = 1;
    Arm_Up_State_Ready_To_Arm_With_Force_fb = _au = 2;
    Arm_Up_State_Armed_With_Exit_Timer_fb = _au = 3;
    Arm_Up_State_Armed_fb = _au = 4;
    Arm_Up_State_Force_Armed_With_Violation_fb = _au = 5;
    Arm_Up_State_Armed_With_Bypass_fb = _au = 6;
    armUpStateText = myArea.GetAreaArmUpStateString();
    Arm_Up_State_Text = armUpStateText;
}
Callback Function onAlarmStatusChange(integer _as)
{
    string armedStatusText[254];

    Alarm_State_No_Alarm_Active_fb = _as = 0;
    Alarm_State_Entrance_Delay_Active_fb = _as = 1;
    Alarm_State_Alarm_Abort_Delay_Active_fb = _as = 2;
    Alarm_State_Fire_Alarm_fb = _as = 3;
    Alarm_State_Medical_Alarm_fb = _as = 4;
    Alarm_State_Police_Alarm_fb = _as = 5;
    Alarm_State_Burglar_Alarm_fb = _as = 6;
    Alarm_State_Aux_1_Alarm_fb = _as = 7;
    Alarm_State_Aux_2_Alarm_fb = _as = 8;
    Alarm_State_Aux_3_Alarm_fb = _as = 9;
    Alarm_State_Aux_4_Alarm_fb = _as = 10;
    Alarm_State_Carbon_Monoxide_Alarm_fb = _as = 11;
    Alarm_State_Emergency_Alarm_fb = _as = 12;
    Alarm_State_Freeze_Alarm_fb = _as = 13;
    Alarm_State_Gas_Alarm_fb = _as = 14;
    Alarm_State_Heat_Alarm_fb = _as = 15;
    Alarm_State_Water_Alarm_fb = _as = 16;
    Alarm_State_Fire_Supervisory_fb = _as = 17;
    Alarm_State_Verify_Fire_fb = _as = 18;
    armedStatusText = myArea.GetAreaArmedStatusString(); 
    Armed_Status_Text = armedStatusText;
}

Callback Function onNameChange(string _name)
{
    Area_Name = _name;
}

Callback Function onClockChange(string _clock, integer showClock)
{
    Countdown_Clock_Text = _clock;
    Show_Clock_fb = showClock = 1;
}

Callback Function onPwChange(string _pw)
{
    Password_Text = _pw;
}

Callback Function onZoneAssignmentChange()
{
    integer i;
    for (i = 1 to 208)
    {
        Zone_Assigned_fb[i] = myArea.GetZoneAssignment(i);
    }
}

Function Main()
{              
    RegisterDelegate(myArea, newArmedStatusChange, onArmedStatusChange);
    RegisterDelegate(myArea, newArmUpStateChange, onArmUpStateChange);
    RegisterDelegate(myArea, newAlarmStatusChange, onAlarmStatusChange);
    RegisterDelegate(myArea, newNameChange, onNameChange);
    RegisterDelegate(myArea, newClockChange, onClockChange);
    RegisterDelegate(myArea, newPwChange, onPwChange);
    RegisterDelegate(myArea, newZoneAssignmentChange, onZoneAssignmentChange);
    myArea.Initialize(PanelNumber, AreaNumber);        
}
