//#SYMBOL_NAME "Elk Notification Driver"

#USER_SIMPLSHARP_LIBRARY "ElkAlarm"
#ENABLE_TRACE

Digital_Input Init;


Digital_Input _skip_, Armed_State_Disarmed, Armed_State_Armed_Away, Armed_State_Stay, Armed_State_Stay_Instant, Armed_State_Armed_To_Night, Armed_State_Armed_To_Night_Instant, Armed_State_Vacation;
Digital_Input _skip_, Alarm_State_No_Alarm_Active, Alarm_State_Entrance_Delay_Active, Alarm_State_Alarm_Abort_Delay_Active, Alarm_State_Fire_Alarm, Alarm_State_Medical_Alarm, Alarm_State_Police_Alarm;
Digital_Input Alarm_State_Burglar_Alarm, Alarm_State_Aux_1_Alarm, Alarm_State_Aux_2_Alarm, Alarm_State_Aux_3_Alarm, Alarm_State_Aux_4_Alarm, Alarm_State_Carbon_Monoxide_Alarm, Alarm_State_Emergency_Alarm;
Digital_Input Alarm_State_Freeze_Alarm, Alarm_State_Gas_Alarm, Alarm_State_Heat_Alarm, Alarm_State_Water_Alarm, Alarm_State_Fire_Supervisory, Alarm_State_Verify_Fire;

Analog_Input Select_Area;
String_Input _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, Select_Device[254];


Digital_Output _skip_,_SKIP_, Armed_State_Disarmed_fb, Armed_State_Armed_Away_fb, Armed_State_Stay_fb, Armed_State_Stay_Instant_fb, Armed_State_Armed_To_Night_fb, Armed_State_Armed_To_Night_Instant_fb, Armed_State_Vacation_fb;
Digital_Output _skip_, Alarm_State_No_Alarm_Active_fb, Alarm_State_Entrance_Delay_Active_fb, Alarm_State_Alarm_Abort_Delay_Active_fb, Alarm_State_Fire_Alarm_fb, Alarm_State_Medical_Alarm_fb, Alarm_State_Police_Alarm_fb;
Digital_Output Alarm_State_Burglar_Alarm_fb, Alarm_State_Aux_1_Alarm_fb, Alarm_State_Aux_2_Alarm_fb, Alarm_State_Aux_3_Alarm_fb, Alarm_State_Aux_4_Alarm_fb, Alarm_State_Carbon_Monoxide_Alarm_fb, Alarm_State_Emergency_Alarm_fb;
Digital_Output Alarm_State_Freeze_Alarm_fb, Alarm_State_Gas_Alarm_fb, Alarm_State_Heat_Alarm_fb, Alarm_State_Water_Alarm_fb, Alarm_State_Fire_Supervisory_fb, Alarm_State_Verify_Fire_fb;
String_Output _SKIP_,_SKIP_, _SKIP_, _SKIP_,_SKIP_, _SKIP_, _SKIP_, Selected_Device;


integer_parameter PanelNumber;
ElkNotificationManagerSimpl myNotifications;

integer waitTillStart;


push Init
{
myNotifications.Initialize(PanelNumber);     
}

Change Select_Device
{
	myNotifications.SelectUserDevice(Select_Device);
}

Change Select_Area
{
	myNotifications.SelectNotificationArea(Select_Area);
}

Callback Function onNewUserDeviceChange(string deviceName)
{
	Selected_Device = deviceName;
}   

eventhandler thisUserDeviceAreaChange(NotificationArea sender, EventArgs args)
{
  trace("selected area event handler");
  Armed_State_Disarmed_fb = sender.Disarmed;
}


Function Main()
{
	
	WaitForInitializationComplete();
	RegisterDelegate(myNotifications, newUserDeviceChange, onNewUserDeviceChange);  
	RegisterEvent(myNotifications, OnUserDeviceAreaChange, thisUserDeviceAreaChange);
	waitTillStart = 1;
	
}
